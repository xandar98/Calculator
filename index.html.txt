<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator App</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

```
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
    }

    .calculator {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.2);
        width: 100%;
        max-width: 400px;
    }

    .display {
        background: rgba(0, 0, 0, 0.7);
        color: white;
        font-size: 2.5rem;
        font-weight: 300;
        text-align: right;
        padding: 20px;
        margin-bottom: 20px;
        border-radius: 10px;
        min-height: 80px;
        display: flex;
        align-items: center;
        justify-content: flex-end;
        word-wrap: break-word;
        overflow-wrap: break-word;
    }

    .buttons {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 12px;
    }

    button {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        border-radius: 12px;
        color: white;
        font-size: 1.2rem;
        font-weight: 500;
        padding: 20px;
        cursor: pointer;
        transition: all 0.2s ease;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    button:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    }

    button:active {
        transform: translateY(0);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
    }

    .operator {
        background: rgba(255, 107, 107, 0.7);
    }

    .operator:hover {
        background: rgba(255, 107, 107, 0.9);
    }

    .equals {
        background: rgba(72, 187, 120, 0.7);
    }

    .equals:hover {
        background: rgba(72, 187, 120, 0.9);
    }

    .clear {
        background: rgba(237, 137, 54, 0.7);
    }

    .clear:hover {
        background: rgba(237, 137, 54, 0.9);
    }

    .zero {
        grid-column: span 2;
    }

    @media (max-width: 480px) {
        .calculator {
            padding: 20px;
            margin: 10px;
        }
        
        .display {
            font-size: 2rem;
            padding: 15px;
            min-height: 60px;
        }
        
        button {
            padding: 15px;
            font-size: 1.1rem;
        }
    }
</style>
```

</head>
<body>
    <div class="calculator">
        <div class="display" id="display">0</div>
        <div class="buttons">
            <button class="clear" onclick="clearDisplay()">C</button>
            <button class="clear" onclick="clearEntry()">CE</button>
            <button class="operator" onclick="appendToDisplay('/')">/</button>
            <button class="operator" onclick="appendToDisplay('*')">×</button>

```
        <button onclick="appendToDisplay('7')">7</button>
        <button onclick="appendToDisplay('8')">8</button>
        <button onclick="appendToDisplay('9')">9</button>
        <button class="operator" onclick="appendToDisplay('-')">-</button>
        
        <button onclick="appendToDisplay('4')">4</button>
        <button onclick="appendToDisplay('5')">5</button>
        <button onclick="appendToDisplay('6')">6</button>
        <button class="operator" onclick="appendToDisplay('+')">+</button>
        
        <button onclick="appendToDisplay('1')">1</button>
        <button onclick="appendToDisplay('2')">2</button>
        <button onclick="appendToDisplay('3')">3</button>
        <button class="equals" onclick="calculate()" rowspan="2">=</button>
        
        <button class="zero" onclick="appendToDisplay('0')">0</button>
        <button onclick="appendToDisplay('.')">.</button>
    </div>
</div>

<script>
    let display = document.getElementById('display');
    let currentInput = '0';
    let operator = null;
    let waitingForOperand = false;

    function updateDisplay() {
        display.textContent = currentInput;
    }

    function appendToDisplay(value) {
        if (waitingForOperand) {
            currentInput = value;
            waitingForOperand = false;
        } else {
            if (currentInput === '0') {
                currentInput = value;
            } else {
                currentInput += value;
            }
        }
        updateDisplay();
    }

    function clearDisplay() {
        currentInput = '0';
        operator = null;
        waitingForOperand = false;
        updateDisplay();
    }

    function clearEntry() {
        currentInput = '0';
        updateDisplay();
    }

    function calculate() {
        let result;
        const prev = parseFloat(currentInput);
        
        if (operator && !waitingForOperand) {
            const current = parseFloat(currentInput);
            
            switch (operator) {
                case '+':
                    result = prev + current;
                    break;
                case '-':
                    result = prev - current;
                    break;
                case '*':
                    result = prev * current;
                    break;
                case '/':
                    if (current === 0) {
                        alert('Cannot divide by zero!');
                        return;
                    }
                    result = prev / current;
                    break;
                default:
                    return;
            }
            
            currentInput = result.toString();
            operator = null;
            waitingForOperand = true;
            updateDisplay();
        }
    }

    // Handle operator buttons
    document.querySelectorAll('.operator').forEach(button => {
        button.addEventListener('click', function(e) {
            const selectedOperator = e.target.textContent;
            
            if (selectedOperator === '×') {
                operator = '*';
            } else {
                operator = selectedOperator;
            }
            
            waitingForOperand = true;
        });
    });

    // Keyboard support
    document.addEventListener('keydown', function(e) {
        const key = e.key;
        
        if (key >= '0' && key <= '9') {
            appendToDisplay(key);
        } else if (key === '.') {
            if (currentInput.indexOf('.') === -1) {
                appendToDisplay(key);
            }
        } else if (key === '+' || key === '-') {
            operator = key;
            waitingForOperand = true;
        } else if (key === '*') {
            operator = key;
            waitingForOperand = true;
        } else if (key === '/') {
            e.preventDefault();
            operator = key;
            waitingForOperand = true;
        } else if (key === 'Enter' || key === '=') {
            e.preventDefault();
            calculate();
        } else if (key === 'Escape' || key === 'c' || key === 'C') {
            clearDisplay();
        } else if (key === 'Backspace') {
            if (currentInput.length > 1) {
                currentInput = currentInput.slice(0, -1);
            } else {
                currentInput = '0';
            }
            updateDisplay();
        }
    });
</script>
```

</body>
</html>